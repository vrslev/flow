name: Tests

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.9, "3.10"]
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pip
            ~/.cache/pypoetry
          key: test-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}

      - name: Install Poetry
        run: |
          pip install -U poetry
          poetry config virtualenvs.create false

      - name: Install dependencies
        run: poetry install

      - name: Run tests
        run: pytest --color=yes --cov

  typing:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pip
            ~/.cache/pypoetry
          key: typing-${{ hashFiles('pyproject.toml') }}

      - name: Install Poetry
        run: |
          pip install -U poetry
          poetry config virtualenvs.create false

      - name: Install dependencies
        run: poetry install

      - name: Install Pyright
        run: npm install -g --no-package-lock --no-save pyright

      - name: Run Pyright
        run: pyright

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pip
            ~/.cache/pre-commit
          key: lint-${{ hashFiles('pyproject.toml') }}

      - name: Install pre-commit
        run: pip install -U pre-commit

      - name: Run pre-commit
        run: pre-commit run --color=always --all-files
